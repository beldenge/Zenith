#
# Copyright 2017-2020 George Belden
#
# This file is part of Zenith.
#
# Zenith is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# Zenith is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# Zenith. If not, see <http://www.gnu.org/licenses/>.
#

# Since we depend on spring-boot-starter-web, don't start the embedded web server (e.g. Tomcat).  This should not be changed.
spring.main.web-application-type=NONE

# The number of threads defaults to the number of available cores of the system, but it can be overridden here
#task-executor.pool-size=
# The number of tasks which can be queued at any given time when performing multi-threaded operations
task-executor.queue-capacity=1000000

# The name of a particular cipher within the ciphers.json file (zodiac408 and zodiac340 are provided)
cipher.name=zodiac408-mutated-2iter-15

# The number of times to run the hill climbing algorithm (essentially the number of random restarts)
mutation-search.decipherment.epochs=1
# The number of rounds of sampling to perform per epoch (A round of sampling can itself perform any number of samples depending on the algorithm)
mutation-search.simulated-annealing.sampler.iterations=10000
# Annealing temperature at the beginning of each epoch
mutation-search.simulated-annealing.temperature.max=30
# Annealing temperature at the end of each epoch
mutation-search.simulated-annealing.temperature.min=20
# Values that seem to work well for CiphertextBigramEvaluator:
#simulated-annealing.temperature.max=0.1
#simulated-annealing.temperature.min=0.001

# When the transposition key length is not known, this is the key length to start hill climbing with (must be greater than 1 and less than or equal to decipherment.transposition.key-length.max)
decipherment.transposition.key-length.min=15
# When the transposition key length is not known, this is the key length to end hill climbing with (must be greater than or equal to decipherment.transposition.key-length.min)
decipherment.transposition.key-length.max=15

# The language model file to use (CSV only) which should exist in the same directory where the application is run from
language-model.filename=zenith-model.csv
# The language model zip file on the classpath which will be unzipped if language-model.filename does not exist
language-model.archive-filename=zenith-model.zip
# The maximum number of ngrams to keep.  The list of ngrams will be sorted in descending order by count and then the top number below will be kept.
language-model.max-ngrams-to-keep=3000000

# For the following word-ngram properties, see http://practicalcryptography.com/cryptanalysis/text-characterisation/word-statistics-fitness-measure/
# The word-unigram model file to use (tab-delimited) which should exist in the application classpath
language-model.filename.word-unigram=count_1w.txt
# The word-bigram model file to use (tab-delimited) which should exist in the application classpath
language-model.filename.word-bigram=count_2w.txt
# The total token count for word-ngrams
language-model.word-ngram.total-token-count=1024908267229

# Order of the Markov model (essentially the n-gram size)
markov.letter.order=5

application.configuration.file-path=./config

# The PlaintextEvaluator implementation class name to use
decipherment.evaluator.plaintext=MarkovModelPlaintextEvaluator

decipherment.known-solution.correctness-threshold-percentage=0.9
